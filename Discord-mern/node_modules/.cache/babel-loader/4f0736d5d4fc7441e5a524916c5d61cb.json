{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shivendra\\\\Desktop\\\\Discord_mern\\\\Discord-mern\\\\src\\\\Chat.js\";\nimport React from 'react';\nimport './Chat.css';\nimport ChatHeader from './ChatHeader';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport CradGiftcardIcon from '@material-ui/icons/CardGiftcard';\nimport GifIcon from '@material-ui/icons/Gif';\nimport EmojiEmoticonsIcon from '@material-ui/icons/EmojiEmotions';\nimport Message from './Message';\nimport { useSelector } from 'react-redux';\nimport { selectUser } from './features/userSlice';\nimport { selectChannelId, selectChannelName } from './features/appSlice';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport db from './firebase';\nimport firebase from 'firebase';\n\nconst Chat = () => {\n  const user = useSelector(selectUser);\n  const channelId = useSelector(selectChannelId);\n  const channelName = useSelector(selectChannelName);\n  const [input, setInput] = useState('');\n  const [messages, setMessages] = useState([]);\n\n  const getConversations = channelId => {\n    if (channelId) {\n      axios.get(\"/get/conversations?id=${channelId}\").then(res => {\n        setMessages(res.data[0].conversation);\n      });\n    }\n  };\n\n  useEffect(() => {\n    if (channelId) {\n      db.collection('channels').doc(channelId).collection('messages').orderBy('timestamp', 'desc').onSnapshot(snapshot => {\n        setMessages(snapshot.docs.map(doc => doc.data()));\n      });\n    }\n  }, [channelId]);\n\n  const sendMessage = e => {\n    e.preventDefault();\n    db.collection('channels').doc(channelId).collection('messages').add({\n      message: input,\n      user: user,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp()\n    });\n    setInput('');\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ChatHeader, {\n    channelName: channelName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat__messages\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, messages.map(message => {\n    console.log(message);\n  }), messages.map(message => /*#__PURE__*/React.createElement(Message, {\n    message: message.message,\n    timestamp: message.timestamp,\n    user: message.user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat__input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(AddCircleIcon, {\n    fontSize: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    disabled: !channelId,\n    value: input,\n    onChange: e => setInput(e.target.value),\n    placeholder: `Message #${channelName}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"chat__inputButton\",\n    onClick: sendMessage,\n    disabled: !channelId,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }, \"Send Message\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat__inputIcon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CradGiftcardIcon, {\n    fontSize: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(GifIcon, {\n    fontSize: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(EmojiEmoticonsIcon, {\n    fontSize: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }))));\n};\n\nexport default Chat;","map":{"version":3,"sources":["C:/Users/Shivendra/Desktop/Discord_mern/Discord-mern/src/Chat.js"],"names":["React","ChatHeader","AddCircleIcon","CradGiftcardIcon","GifIcon","EmojiEmoticonsIcon","Message","useSelector","selectUser","selectChannelId","selectChannelName","useState","useEffect","db","firebase","Chat","user","channelId","channelName","input","setInput","messages","setMessages","getConversations","axios","get","then","res","data","conversation","collection","doc","orderBy","onSnapshot","snapshot","docs","map","sendMessage","e","preventDefault","add","message","timestamp","firestore","FieldValue","serverTimestamp","console","log","target","value"],"mappings":"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","sourcesContent":["import React from 'react'\nimport './Chat.css'\nimport ChatHeader from './ChatHeader'\nimport AddCircleIcon from '@material-ui/icons/AddCircle'\nimport CradGiftcardIcon from '@material-ui/icons/CardGiftcard'\nimport GifIcon from '@material-ui/icons/Gif'\nimport EmojiEmoticonsIcon from '@material-ui/icons/EmojiEmotions'\nimport Message from './Message'\nimport { useSelector } from 'react-redux'\nimport { selectUser } from './features/userSlice'\nimport { selectChannelId, selectChannelName } from './features/appSlice'\nimport { useState } from 'react'\nimport { useEffect } from 'react'\nimport db from './firebase'\nimport firebase from 'firebase'\n\nconst Chat = () => {\n    const user = useSelector(selectUser)\n    const channelId = useSelector(selectChannelId)\n    const channelName = useSelector(selectChannelName)\n    const [input, setInput] = useState('')\n    const [messages, setMessages] = useState([])\n\n    const getConversations = (channelId) => {\n        if(channelId) {\n            axios.get(\"/get/conversations?id=${channelId}\").then((res) =>{\n                setMessages(res.data[0].conversation)\n            })\n        }\n    }\n\n    useEffect(() => {\n        if (channelId) {\n            db.collection('channels').doc(channelId).collection('messages').orderBy('timestamp', 'desc').onSnapshot(snapshot => {\n                setMessages(snapshot.docs.map(doc => doc.data()))\n            })\n        }\n\n\n    }, [channelId])\n\n    const sendMessage = (e) => {\n        e.preventDefault()\n\n        db.collection('channels').doc(channelId).collection('messages').add({\n            message: input,\n            user: user,\n            timestamp: firebase.firestore.FieldValue.serverTimestamp()\n        })\n\n        setInput('')\n    }\n\n    return (\n        <div className='chat' >\n            <ChatHeader channelName={channelName} />\n\n            <div className=\"chat__messages\">\n                {messages.map((message) => {\n                    console.log(message)\n                })}\n                {messages.map(message => (\n                    <Message message={message.message} timestamp={message.timestamp} user={message.user} />\n                ))}\n            </div>\n\n            <div className=\"chat__input\">\n                <AddCircleIcon fontSize='large' />\n                <form>\n                    <input type=\"text\" disabled={!channelId} value={input} onChange={(e) => setInput(e.target.value)} placeholder={`Message #${channelName}`} />\n                    <button className='chat__inputButton' onClick={sendMessage} disabled={!channelId} type='submit'>Send Message</button>\n                </form>\n\n                <div className=\"chat__inputIcon\">\n                    <CradGiftcardIcon fontSize='large' />\n                    <GifIcon fontSize='large' />\n                    <EmojiEmoticonsIcon fontSize='large' />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Chat\n"]},"metadata":{},"sourceType":"module"}