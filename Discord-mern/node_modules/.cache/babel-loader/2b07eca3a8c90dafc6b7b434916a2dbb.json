{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\Shivendra\\\\Documents\\\\Github\\\\Discord-MERN-Clone\\\\Discord-mern\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React from'react';import'./Chat.css';import ChatHeader from'./ChatHeader';import AddCircleIcon from'@material-ui/icons/AddCircle';import CradGiftcardIcon from'@material-ui/icons/CardGiftcard';import GifIcon from'@material-ui/icons/Gif';import EmojiEmoticonsIcon from'@material-ui/icons/EmojiEmotions';import Message from'./Message';import{useSelector}from'react-redux';import{selectUser}from'./features/userSlice';import{selectChannelId,selectChannelName}from'./features/appSlice';import{useState}from'react';import{useEffect}from'react';import db from'./firebase';import firebase from'firebase';import axios from'./axios';var Chat=function Chat(){var user=useSelector(selectUser);var channelId=useSelector(selectChannelId);var channelName=useSelector(selectChannelName);var _useState=useState(''),_useState2=_slicedToArray(_useState,2),input=_useState2[0],setInput=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),messages=_useState4[0],setMessages=_useState4[1];var getConversation=function getConversation(channelId){if(channelId){axios.get(\"/get/conversation?id=\".concat(channelId)).then(function(res){setMessages(res.data[0].conversation);});}};useEffect(function(){getConversation(channelId);},[channelId]);var sendMessage=function sendMessage(e){e.preventDefault();axios.post(\"/new/message?id=\".concat(channelId),{message:input,timestamp:Date.now(),user:user});setInput('');};return/*#__PURE__*/React.createElement(\"div\",{className:\"chat\"},/*#__PURE__*/React.createElement(ChatHeader,{channelName:channelName}),/*#__PURE__*/React.createElement(\"div\",{className:\"chat__messages\"},messages.map(function(message){console.log(message);}),messages.map(function(message){return/*#__PURE__*/React.createElement(Message,{message:message.message,timestamp:message.timestamp,user:message.user});})),/*#__PURE__*/React.createElement(\"div\",{className:\"chat__input\"},/*#__PURE__*/React.createElement(AddCircleIcon,{fontSize:\"large\"}),/*#__PURE__*/React.createElement(\"form\",null,/*#__PURE__*/React.createElement(\"input\",{type:\"text\",disabled:!channelId,value:input,onChange:function onChange(e){return setInput(e.target.value);},placeholder:\"Message #\".concat(channelName,\". Hit Enter \\u23CE to send \")}),/*#__PURE__*/React.createElement(\"button\",{className:\"chat__inputButton\",onClick:sendMessage,disabled:!channelId,type:\"submit\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"chat__inputIcon\"},/*#__PURE__*/React.createElement(CradGiftcardIcon,{fontSize:\"large\"}),/*#__PURE__*/React.createElement(GifIcon,{fontSize:\"large\"}),/*#__PURE__*/React.createElement(EmojiEmoticonsIcon,{fontSize:\"large\"}))));};export default Chat;","map":{"version":3,"sources":["C:/Users/Shivendra/Documents/Github/Discord-MERN-Clone/Discord-mern/src/Chat.js"],"names":["React","ChatHeader","AddCircleIcon","CradGiftcardIcon","GifIcon","EmojiEmoticonsIcon","Message","useSelector","selectUser","selectChannelId","selectChannelName","useState","useEffect","db","firebase","axios","Chat","user","channelId","channelName","input","setInput","messages","setMessages","getConversation","get","then","res","data","conversation","sendMessage","e","preventDefault","post","message","timestamp","Date","now","map","console","log","target","value"],"mappings":"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","sourcesContent":["import React from 'react'\nimport './Chat.css'\nimport ChatHeader from './ChatHeader'\nimport AddCircleIcon from '@material-ui/icons/AddCircle'\nimport CradGiftcardIcon from '@material-ui/icons/CardGiftcard'\nimport GifIcon from '@material-ui/icons/Gif'\nimport EmojiEmoticonsIcon from '@material-ui/icons/EmojiEmotions'\nimport Message from './Message'\nimport { useSelector } from 'react-redux'\nimport { selectUser } from './features/userSlice'\nimport { selectChannelId, selectChannelName } from './features/appSlice'\nimport { useState } from 'react'\nimport { useEffect } from 'react'\nimport db from './firebase'\nimport firebase from 'firebase'\n\nimport axios from './axios';\n\nconst Chat = () => {\n    const user = useSelector(selectUser)\n    const channelId = useSelector(selectChannelId)\n    const channelName = useSelector(selectChannelName)\n    const [input, setInput] = useState('')\n    const [messages, setMessages] = useState([])\n\n    const getConversation = (channelId) => {\n        if (channelId) {\n            axios.get(`/get/conversation?id=${channelId}`).then((res) => {\n                setMessages(res.data[0].conversation)\n            })\n        }\n    }\n\n    useEffect(() => {\n        getConversation(channelId)\n    }, [channelId])\n\n\n    const sendMessage = (e) => {\n        e.preventDefault()\n\n        axios.post(`/new/message?id=${channelId}`, {\n            message: input,\n            timestamp: Date.now(),\n            user: user,\n        })\n\n        setInput('')\n    }\n\n    return (\n        <div className='chat' >\n            <ChatHeader channelName={channelName} />\n\n            <div className=\"chat__messages\">\n                {messages.map((message) => {\n                    console.log(message)\n                })}\n                {messages.map(message => (\n                    <Message message={message.message} timestamp={message.timestamp} user={message.user} />\n                ))}\n            </div>\n\n            <div className=\"chat__input\">\n                <AddCircleIcon fontSize='large' />\n                <form>\n                    <input type=\"text\" disabled={!channelId} value={input} onChange={(e) => setInput(e.target.value)} placeholder={`Message #${channelName}. Hit Enter ⏎ to send `} />\n                    <button className='chat__inputButton' onClick={sendMessage} disabled={!channelId} type='submit'></button>\n                </form>\n\n                <div className=\"chat__inputIcon\">\n                    <CradGiftcardIcon fontSize='large' />\n                    <GifIcon fontSize='large' />\n                    <EmojiEmoticonsIcon fontSize='large' />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Chat\n"]},"metadata":{},"sourceType":"module"}